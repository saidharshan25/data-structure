class Node {
    int data;
    Node next;
    Node(int value) {
      data = value;
      next = null;
    }
}
class StackLL {
    private Node top; 
    StackLL() {
        top = null;
    }
    public void push(int value) {
        Node newNode = new Node(value);
        newNode.next = top;            
        top = newNode;  
    }
    public int pop() {
        if (isEmpty()) {
            System.out.println("Stack Underflow");
            return -1;
        }
        int value = top.data;    
        top = top.next;          
        return value;            
    }
     public int peek() {
        if (isEmpty()) {
            System.out.println("Stack is Empty");
            return -1; 
        }
        return top.data;
    }
    public boolean isEmpty() {
        return top == null; 
    }
    public void display() {
        if (isEmpty()) {
            System.out.println("Stack is Empty");
            return;
        }
        Node temp = top;
        System.out.print("Stack (top to bottom): ");
        while (temp != null) {
            System.out.print(temp.data + " ");
            temp = temp.next; 
        }
        System.out.println();
    }
}
class StackLLDemo {
    public static void main(String[] args) {
         StackLL stack = new StackLL();
        stack.push(10);
        stack.push(20);
        stack.push(30);
        stack.display();
        System.out.println("Popped: " + stack.pop());
        stack.display();
    }
}



Output:
Stack (top to bottom): 30 20 10 
Popped: 30
Stack (top to bottom): 20 10 
