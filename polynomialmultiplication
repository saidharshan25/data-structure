import java.util.*;
class PolyNode{
	int values;
	int exponent;
	PolyNode next;
	PolyNode(int v,int e){
		values=v;
		exponent=e;
		next=null;
	}
}
public class PolynomialMultiplication{
	public PolyNode MultiplyPolynomial(PolyNode poly1,PolyNode poly2){
		if(poly1==null||poly2==null) return null;
		TreeMap<Integer,Integer>map=new TreeMap<>(Collections.reverseOrder());
		for(PolyNode p1=poly1;p1 !=null;p1=p1.next){
			for(PolyNode p2=poly2;p2 !=null;p2=p2.next){
				int newexp=p1.exponent+p2.exponent;
			    int newval =p1.values*p2.values;
			    map.put(newexp,map.getOrDefault(newexp,0)+newval);
			}	
		}
		PolyNode dummy=new PolyNode(0,0);
		PolyNode current=dummy;
		for(Map.Entry<Integer,Integer>entry:map.entrySet()){
			int val=entry.getValue();
			int exp=entry.getKey();
			if(val!=0){
				current.next=new PolyNode(val,exp);
				current=current.next;
		    }
		}
		return dummy.next;
    }
	public void printPolynomial(PolyNode head){
		while(head!=null){
			System.out.print(head.values+"x^"+head.exponent);
			if(head.next!=null)
				System.out.print("+");
			head=head.next;
		}
		System.out.println();
	}
	public static void main(String[] args){
		PolynomialMultiplication pm=new PolynomialMultiplication();
		PolyNode poly1=new PolyNode(3,2);
		poly1.next=new PolyNode(4,1);
		PolyNode poly2=new PolyNode(5,2);
		poly2.next=new PolyNode(2,0);
		System.out.print("Poly 1:");
		pm.printPolynomial(poly1);
		System.out.print("Poly 2:");
		pm.printPolynomial(poly2);
		PolyNode result=pm.MultiplyPolynomial(poly1,poly2);
		System.out.print("Result(poly1*poly2):");
		pm.printPolynomial(result);
	}
}


Output:
Poly 1:3x^2+4x^1
Poly 2:5x^2+2x^0
Result(poly1*poly2):15x^4+20x^3+6x^2+8x^1
		
